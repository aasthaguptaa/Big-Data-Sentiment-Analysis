services:
  
  broker:
    image: apache/kafka:4.0.0
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/9092"]
      interval: 5s
      retries: 5
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 10
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    # KAFKA_ particions to increase speed for data pipeline
    networks:
      - sentiment-network
  
  producer:
    build:
      context: .
      dockerfile: Dockerfile.producer
    depends_on:
      broker:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      - KAFKA_BROKER=broker:9092
    volumes:
      - ./filtered.jsonl:/project/filtered.jsonl
    restart: no
    networks:
      - sentiment-network

  jobmanager:
    build:
      context: .
      dockerfile: Dockerfile.flink
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 10
    volumes:
      - ./jobs:/project/jobs
      - ./models:/project/models
    depends_on:
      - broker
      - elasticsearch
    restart: unless-stopped
    networks:
      - sentiment-network
  taskmanager:
    build:
      context: .
      dockerfile: Dockerfile.flink
    command: taskmanager
    environment:
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 10
    volumes:
      - ./jobs:/project/jobs
      - ./models:/project/models
    depends_on:
      - jobmanager
    restart: unless-stopped
    networks:
      - sentiment-network

      
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.28
    environment:
      - cluster.name=es-docker-cluster
      - node.name=es01
      - discovery.type=single-node
      - network.host=0.0.0.0
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
      - xpack.security.enabled=false
      - action.auto_create_index=true
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s 
    networks:
      - sentiment-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.28
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_HOST=0.0.0.0
      - MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED=true
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - sentiment-network

volumes:
  es_data:
    driver: local

networks:
  sentiment-network:
    driver: bridge